name: Android Release Build

on:
  push:
    tags:
      - "v*" # Only run on tag pushes like vX.X.X

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: gradle

      - name: Decode keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > release.jks && ls -la
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > app/release.jks && ls -la app/

      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew

      - name: google-services.json
        run: |
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 -d > app/google-services.json && ls -la app/

      - name: Build signed release APK (skip lint/tests)
        run: |
          ls -la && ls -la app && ./gradlew assembleRelease \
            -Pandroid.injected.signing.store.file=release.jks \
            -Pandroid.injected.signing.store.password=${{ secrets.KEYSTORE_PASSWORD }} \
            -Pandroid.injected.signing.key.alias=${{ secrets.KEY_ALIAS }} \
            -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }} \
            --no-daemon --warning-mode none -x lint -x test

      - name: Get release notes from commit message
        id: get_notes
        run: |
          RELEASE_NOTES=$(git log -1 --pretty=%B)
          echo "notes<<EOF" >> $GITHUB_OUTPUT
          echo "$RELEASE_NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Upload APK to GitHub Releases
        uses: softprops/action-gh-release@v2
        with:
          files: app/build/outputs/apk/release/*.apk
          body: ${{ steps.get_notes.outputs.notes }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TK }}
